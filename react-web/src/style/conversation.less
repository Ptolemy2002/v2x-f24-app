@import "functions";
@import "variables";
@import "bs/functions";

#conversation-container {
    display: flex;
    flex-direction: column;
    padding: @conversation-padding;
}

.speech-bubble-style(@max-width) {
    width: fit-content;
    max-width: @max-width;

    border-radius: @speech-bubble-radius;
    padding: @speech-bubble-padding;

    &.recepient {
        background-color: @recepient-color;
        color: @recepient-text-color;
        .align-left();
    }

    &.sender {
        background-color: @sender-color;
        color: @sender-text-color;
        .align-right();
    }
}

#speech-container {
    // Scroll if the content is too tall, but don't show the scrollbar if it's not needed.
    overflow-y: auto;
    flex-grow: 1;
    margin-bottom: @speech-container-margin-bottom;

    display: flex;
    flex-direction: column;
    gap: @speech-container-gap;

    > .speech-bubble {
        .speech-bubble-style(@speech-bubble-max-width);

        // This defines the speech-bubble-img class.
        // For some reason, it doesn't inherit from the parent,
        // so we have to re-apply everything. That's why we have
        // the .speech-bubble-style function instead of including
        // the styles directly.
        &-img {
            .speech-bubble-style(@speech-bubble-img-max-width);

            > img {
                max-width: 100%;
                height: auto;
                
                border:
                    @speech-bubble-img-border-thickness
                    @speech-bubble-img-border-style
                    @speech-bubble-img-border-color
                ;
            }
        }

        &-aud {
            .speech-bubble-style(@speech-bubble-aud-width);
            width: 100%; // This will be capped by the max-width.
            min-height: @speech-bubble-aud-min-height;

            > audio {
                width: 100%;
            }
        }
    }
}

#input-container {
    display: flex;
    flex-direction: row;
    gap: @input-container-gap;
    max-height: @input-max-height;

    > .input {
        min-height: @input-min-height;
        max-height: 100%;
        flex-grow: 1;
        border-radius: @input-radius;
        padding: @input-padding;
    }

    > .send-button {
        background-color: @sender-color;
        color: @sender-text-color;
        border-radius: @send-button-radius;
        padding: @send-button-padding;

        height: fit-content;
        .center-vertical();
    }
}